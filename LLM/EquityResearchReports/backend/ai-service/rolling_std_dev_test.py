import numpy as np
import pandas as pd

# Example data
# data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# data = [223.75      , 221.52999878, 223.8500061 , 217.8999939 ,
#        222.13000488, 223.19000244, 223.88999939, 203.19000244,
#        188.38000488, 181.46000671, 172.41999817, 198.8500061 ,
#        190.41999817, 198.1499939 , 202.52000427, 202.13999939,
#        194.27000427, 196.97999573, 196.97999573, 179.72712708]

# data = [221.52999878, 223.8500061 , 217.8999939 , 222.13000488,
#        223.19000244, 223.88999939, 203.19000244, 188.38000488,
#        181.46000671, 172.41999817, 198.8500061 , 190.41999817,
#        198.1499939 , 202.52000427, 202.13999939, 194.27000427,
#        196.97999573, 196.97999573, 105.87492371]

# data = [231.6401825	,	234.4839325	,	235.9606781	,	235.34204102,
# 	230.25323486,	230.06365967,	230.90180969,	232.88743591,		
# 	233.15684509,	229.59469604,	225.41389465,	222.42048645,		
# 	221.52244568,	222.95928955,	222.230896	,	226.98043823,	
# 	226.71073914,	223.98373413,	223.98373413,	224.87275696,		
# 	227.96936035,	224.75288391,	227.76957703,	228.02928162,		
# 	228.74848938,	228.26902771,	229.61753845,	232.61424255,		
# 	234.80183411,	234.67198181,	237.0693512	,	239.32685852,	
# 	242.38349915,	242.74310303,	242.77307129,	242.57328796,		
# 	246.47900391,	247.49787903,	246.21928406,	247.68768311,		
# 	247.85748291,	250.76428223,	253.20159912,	247.77757263,		
# 	249.51565552,	254.21051025,	254.98965454,	257.91644287,		
# 	258.73550415,	255.30929565,	251.92301941,	250.14497375,		
# 	243.5821991	,	243.09272766,	244.73092651,	241.94400024,	
# 	242.43344116,	236.58987427,	234.14256287,	233.02378845,		
# 	237.60874939,	228.00930786,	229.72741699,	222.39547729,		
# 	223.58416748,	223.41436768,	222.5353241	,	229.60754395,	
# 	237.99832153,	239.09712219,	237.32905579,	235.74081421,		
# 	227.75958252,	232.54432678,	232.21469116,	232.96386719,		
# 	227.38000488,	227.6499939	,	232.61999512,	236.86999512,	
# 	241.52999878,	244.6000061	,	244.47000122,	244.86999512,	
# 	245.83000183,	245.55000305,	247.1000061	,	247.03999329,	
# 	240.36000061,	237.30000305,	241.83999634,	238.02999878,		
# 	235.92999268,	235.74000549,	235.33000183,	239.07000732,		
# 	227.47999573,	220.83999634,	216.97999573,	209.67999268,		
# 	213.49000549,	214	,	212.69000244,	215.24000549,	
# 	214.1000061	,	218.27000427,	220.72999573,	223.75	,
# 	221.52999878,	223.8500061	,	217.8999939	,	222.13000488,
# 	223.19000244,	223.88999939,	203.19000244,	188.38000488,		
# 	181.46000671,	172.41999817,	198.8500061	,	190.41999817,	
# 	198.1499939	,	202.52000427,	202.13999939,	194.27000427,	
# 	196.97999573,	196.97999573, 104.17955017]

data =[231.27099609,	
	231.6401825,
	234.4839325,
	235.9606781,
	235.34204102,
	230.25323486,
	230.06365967,
	230.90180969,
	232.88743591,
	233.15684509,
	229.59469604,
	225.41389465,
	222.42048645,
	221.52244568,
	222.95928955,
	222.230896,
	226.98043823,
	226.71073914,
	223.98373413,
	223.98373413,
	224.87275696,
	227.96936035,
	224.75288391,
	227.76957703,
	228.02928162,
	228.74848938,
	228.26902771,
	229.61753845,
	232.61424255,
	234.80183411,
	234.67198181,
	237.0693512,
	239.32685852,
	242.38349915,
	242.74310303,
	242.77307129,
	242.57328796,
	246.47900391,
	247.49787903,
	246.21928406,
	247.68768311,
	247.85748291,
	250.76428223,
	253.20159912,
	247.77757263,
	249.51565552,
	254.21051025,
	254.98965454,
	257.91644287,
	258.73550415,
	255.30929565,
	251.92301941,
	250.14497375,
	243.5821991,
	243.09272766,
	244.73092651,
	241.94400024,
	242.43344116,
	236.58987427,
	234.14256287,
	233.02378845,
	237.60874939,
	228.00930786,
	229.72741699,
	222.39547729,
	223.58416748,
	223.41436768,
	222.5353241,
	229.60754395,
	237.99832153,
	239.09712219,
	237.32905579,
	235.74081421,
	227.75958252,
	232.54432678,
	232.21469116,
	232.96386719,
	227.38000488,
	227.6499939,
	232.61999512,
	236.86999512,
	241.52999878,
	244.6000061,
	244.47000122,
	244.86999512,
	245.83000183,
	245.55000305,
	247.1000061,
	247.03999329,
	240.36000061,
	237.30000305,
	241.83999634,
	238.02999878,
	235.92999268,
	235.74000549,
	235.33000183,
	239.07000732,
	227.47999573,
	220.83999634,
	216.97999573,
	209.67999268,
	213.49000549,
	214,
	212.69000244,
	215.24000549,
	214.1000061,
	218.27000427,
	220.72999573,
	223.75,
	221.52999878,
	223.8500061,
	217.8999939,
	222.13000488,
	223.19000244,
	223.88999939,
	203.19000244,
	188.38000488,
	181.46000671,
	172.41999817,
	198.8500061,
	190.41999817,
	198.1499939,
	202.52000427,
	202.13999939,
	194.27000427,
	196.97999573,
	196.97999573,
	104.17955017]

window_size = 20

# Convert to a pandas Series
series = pd.Series(data)

# # Calculate rolling mean and sum of squares
# rolling_mean = series.rolling(window=window_size).mean()
# rolling_sum_of_squares = series.rolling(window=window_size).apply(lambda x: np.sum(x**2), raw=True)
# # Calculate rolling standard deviation
# rolling_std = np.sqrt((rolling_sum_of_squares - (series.rolling(window=window_size).sum()**2) / window_size) / window_size)

rolling_mean = series.rolling(window=window_size).mean()
rolling_std = series.rolling(window=window_size).std(ddof=0)

# print("Rolling Mean:")
# print(rolling_mean)
# print("\nRolling Std:")
# print(rolling_std)

#get last mean and std
rolling_mean_last = rolling_mean.iloc[-1]
rolling_std_last = rolling_std.iloc[-1]
print(f"Last Rolling Mean: {rolling_mean_last}")
print(f"Last Rolling Std: {rolling_std_last}")